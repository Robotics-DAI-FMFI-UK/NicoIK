# juraj

import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import Rbf


x = [0.133, 0.208, 0.272, 0.338, 0.388, 0.420, 0.458, 0.483, 0.496, 0.480, 0.464, 0.433, 0.392, 0.344, 0.291, 0.227, 0.164, 0.152, 0.139, 0.123, 0.104, 0.111, 0.085, 0.069, 0.085, 0.158, 0.177, 0.193, 0.202, 0.218, 0.234, 0.313, 0.300, 0.278, 0.268, 0.240, 0.227, 0.313, 0.344, 0.366, 0.376, 0.385, 0.407, 0.426, 0.426, 0.272, 0.369]
y = [-0.395, -0.437, -0.447, -0.411, -0.358, -0.289, -0.216, -0.142, -0.074, -0.005, 0.068, 0.142, 0.200, 0.247, 0.279, 0.305, 0.321, 0.258, 0.184, 0.100, 0.005, -0.084, -0.163, -0.253, -0.326, -0.289, -0.189, -0.089, 0.016, 0.116, 0.205, 0.158, 0.053, -0.053, -0.153, -0.242, -0.342, -0.316, -0.216, -0.121, -0.026, 0.079, -0.179, -0.089, 0.005, -0.384, -0.274]
yaw = [-0.595, -0.728, -0.794, -0.761, -0.694, -0.463, -0.265, -0.132, -0.033, 0.165, 0.331, 0.529, 0.728, 0.893, 1.058, 1.224, 1.455, 1.389, 1.389, 1.389, 1.488, 0.794, 0.298, -0.132, -0.298, -0.298, -0.099, 0.298, 0.959, 1.058, 1.190, 0.992, 0.761, 0.496, 0.066, -0.265, -0.496, -0.496, -0.198, 0.099, 0.298, 0.562, -0.066, 0.198, 0.331, -0.496, -0.331]

functions = ['multiquadric', 'linear', 'gaussian']

for func in functions:
    rbf = Rbf(x, y, yaw, function=func)
    xi = np.linspace(min(x), max(x), 100)
    yi = np.linspace(min(y), max(y), 100)
    xi, yi = np.meshgrid(xi, yi)
    zi = rbf(xi, yi)

    plt.figure(figsize=(5, 4))
    plt.contourf(xi, yi, zi, levels=30, cmap='twilight')
    plt.colorbar(label='yaw (rad)')
    plt.scatter(x, y, c='black', s=10, label='sampled points')
    plt.title(f'RBF: {func}')
    plt.xlabel('x')
    plt.ylabel('y')
    plt.legend()
    plt.tight_layout()
    plt.show()
